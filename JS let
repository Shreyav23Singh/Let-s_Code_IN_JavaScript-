The let keyword was introduced in ES6 (2015).

Variables defined with let can not be redeclared.

Variables defined with let must be declared before use.

Variables defined with let have block scope.

//Swap  two variables using let 
let a=5;
let b=6;

let temp =a;
a=b;
b=temp;
console.log("The value of a is " +a);
console.log("The value of b is "+b);
o/p
The value of a is 6
The value of b is 5

// 2. Example: In this example, the num variable is a globally scoped variable and it can be accessed from anywhere in the program.
let num =10;
console.log(num)
function fun(){
  console.log(num);
}
fun();

// 3.  Example: In this example, the num variable is declared inside the function and cannot be accessed outside the function.
function fun(){
  let num= 10; //local scope " Output = 10 "
  console.log(num);
}
fun();
console.log(num); //
ReferenceError: num is not defined

??Example 4
let x=22; // It will access the value of let is 22
function masti(){
  let x=45; // Can't declare let two times
  console.log(x)
}
console.log(x)

Output
22

// Example 5 Example: In this example, variable x is redeclared inside other blocks.

let x=22;
{
  let x=45;
  console.log(x)
}
console.log(x)
Output
22
45

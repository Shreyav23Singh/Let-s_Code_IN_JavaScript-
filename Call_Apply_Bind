Call , Apply and Bind are the three methods in javascript that allows to control the  invocation context of a function .
Call , Apply and Bind are the three methods in javaScript that are used to set the this keyword independently how the function is called . 
The bind method creates a copy of the function and set the this keyword while call , apply set the this keyword and call the function immediately .

Call is a function that helps you change the context of the invoking function. In other words, it helps you replace the value of this inside a function with
whatever value you want.

Apply is very similar to the call function. The only difference is that in apply you can pass an array as an argument list.

Bind is a function that helps you create another function that you can execute later with the new context of this that is provided.

* * * * * * * * * * *  Call Method() * * * * *  * *  * *  * 
let participant1 = {
    name: "Shreya",
    battery: 70,
    ChargeBattery: function () {
        this.battery = 100;
    }
};

let participant2 = {
    name: "Rakesh",
    battery: 60
};

console.log(participant1.ChargeBattery());
console.log(participant1);
console.log(participant2);

participant1.ChargeBattery.call(participant2);
console.log(participant2);


***********************************      Example of call() method        ********************************
var emp1 ={
    firstname : 'Shreya',
    lastname : 'Singh'
}
var emp2  ={
    firstname:'Rakesh',
    lastname:'Singh',
}
function invite(profession1 , profession2){
    console.log(this.firstname + " " +  this.lastname + " profession is " + profession1);
    
    
}
invite.call(emp1 ,"Frontend Developer");
invite.call(emp2 ,"Backend Developer");

Output
node /tmp/8Ck8kDx5EZ.js
Shreya Singh profession is Frontend Developer
Rakesh Singh profession is Backend Developer

* * * * * * * * * * * * * * * * * * * * *  * * *   Apply method() * * * * *  * * * * * * * * * * * * *
var emp1 ={
    firstname : 'Shreya',
    lastname : 'Singh'
}
var emp2  ={
    firstname:'Rakesh',
    lastname:'Singh',
}
function invite(profession1 , profession2){
    console.log(this.firstname + " " +  this.lastname + " profession is " + profession1);
    
    
}
invite.apply(emp1 ,['Frontend Developer']);
invite.apply(emp2 ,['Backend Developer']);

Output
node /tmp/8Ck8kDx5EZ.js
Shreya Singh profession is Frontend Developer
Rakesh Singh profession is Backend Developer


* * * * * * * * * * * * * * * * * * * * * * * Bind Method()  * * * * * * * * * * * * * * * * * * * * * * * 
 Bind creates a new function that will have this set to the first parameter passed to
bind().

var emp1 ={
    firstname : 'Shreya',
    lastname : 'Singh'
}
var emp2  ={
    firstname:'Rakesh',
    lastname:'Singh',
}
function invite(profession1 , profession2){
    console.log(this.firstname + " " +  this.lastname + " profession is " + profession1);
    
    
}
var inviteEmp1 = invite.bind(emp1); //bind method first copy the function and then set the this keyword
var inviteEmp2 = invite.bind(emp2);
inviteEmp1('Frontend Developer');
inviteEmp2('Backend Developer');

